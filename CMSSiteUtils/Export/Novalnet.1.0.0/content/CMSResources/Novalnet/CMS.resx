<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="custom.account_holder" xml:space="preserve">
    <value>Account holder</value>
  </data>
  <data name="custom.amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="custom.authcode_title" xml:space="preserve">
    <value>Authentication code</value>
  </data>
  <data name="custom.barzahlen_title" xml:space="preserve">
    <value>Barzahlen</value>
  </data>
  <data name="custom.creditcard_title" xml:space="preserve">
    <value>Credit Card</value>
  </data>
  <data name="custom.duedate_title" xml:space="preserve">
    <value>Due date</value>
  </data>
  <data name="custom.cc3d_title" xml:space="preserve">
    <value>Enable 3D secure</value>
  </data>
  <data name="custom.testmode_title" xml:space="preserve">
    <value>Enable Test Mode</value>
  </data>
  <data name="custom.authcode_desc" xml:space="preserve">
    <value>Enter Novalnet authentication code</value>
  </data>
  <data name="custom.merchantid_desc" xml:space="preserve">
    <value>Enter Novalnet merchant ID</value>
  </data>
  <data name="custom.projectid_desc" xml:space="preserve">
    <value>Enter Novalnet project ID</value>
  </data>
  <data name="custom.tariffid_desc" xml:space="preserve">
    <value>Enter Novalnet tariff ID</value>
  </data>
  <data name="custom.referrerid_desc" xml:space="preserve">
    <value>Enter the referrer ID of the person/company who recommended you Novalnet</value>
  </data>
  <data name="custom.payment_accesskey_desc" xml:space="preserve">
    <value>Enter the Novalnet payment access key</value>
  </data>
  <data name="custom.slipexpirydate_desc" xml:space="preserve">
    <value>Enter the number of days to pay the amount at store near you. If the field is empty, 14 days will be set as default</value>
  </data>
  <data name="custom.invoice_duedate_desc" xml:space="preserve">
    <value>Enter the number of days to transfer the payment amount to Novalnet (must be greater than 7 days). In case if the field is empty, 14 days will be set as due date by default</value>
  </data>
  <data name="custom.gateway_timeout_title" xml:space="preserve">
    <value>Gateway timeout (in seconds)</value>
  </data>
  <data name="custom.onhold_desc" xml:space="preserve">
    <value>In case the order amount exceeds mentioned limit, the transaction will be set on hold till your confirmation of transaction</value>
  </data>
  <data name="custom.gateway_timeout_desc" xml:space="preserve">
    <value>In case the order processing time exceeds the gateway timeout, the order will not be placed</value>
  </data>
  <data name="custom.invoice_title" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="custom.live_mode" xml:space="preserve">
    <value>Live Mode</value>
  </data>
  <data name="custom.global_configuration" xml:space="preserve">
    <value>Novalnet Global Configuration</value>
  </data>
  <data name="custom.transaction_details" xml:space="preserve">
    <value>Novalnet Transaction Details</value>
  </data>
  <data name="custom.payment_accesskey_title" xml:space="preserve">
    <value>Payment Access Key</value>
  </data>
  <data name="custom.invoice_duedate_title" xml:space="preserve">
    <value>Payment due date (in days)</value>
  </data>
  <data name="custom.payment_reference1" xml:space="preserve">
    <value>Payment Reference 1</value>
  </data>
  <data name="custom.payment_reference2" xml:space="preserve">
    <value>Payment Reference 2</value>
  </data>
  <data name="custom.payment_reference_title" xml:space="preserve">
    <value>Please use any one of the following references as the payment reference, as only through this way your payment is matched and assigned to the order</value>
  </data>
  <data name="custom.payment_description" xml:space="preserve">
    <value>After the successful verification, you will be redirected to Novalnet secure order page to proceed with the payment
Please do not close the browser after the successful payment until you are returned to the shop.</value>
  </data>
  <data name="custom.novalnet_module_description" xml:space="preserve">
    <value>PCI Compliant, seamless integration with the various types of payment and payment-related services integrated into one unique platform. Please contact us at sales@novalnet.de</value>
  </data>
  <data name="custom.projectid_title" xml:space="preserve">
    <value>Project ID</value>
  </data>
  <data name="custom.referrerid_title" xml:space="preserve">
    <value>Referrer ID</value>
  </data>
  <data name="custom.onhold_title" xml:space="preserve">
    <value>Set a limit for on-hold transaction</value>
  </data>
  <data name="custom.slipexpirydate_title" xml:space="preserve">
    <value>Slip expiry date (in days)</value>
  </data>
  <data name="custom.tariffid_title" xml:space="preserve">
    <value>Tariff ID</value>
  </data>
  <data name="custom.test_mode" xml:space="preserve">
    <value>TestMode</value>
  </data>
  <data name="custom.cc3d_desc" xml:space="preserve">
    <value>The 3D-Secure will be activated for credit cards. The issuing bank prompts the buyer for a password what, in turn, help to prevent a fraudulent payment. It can be used by the issuing bank as evidence that the buyer is indeed their card holder. This is intended to help decrease a risk of charge-back</value>
  </data>
  <data name="custom.testmode_desc" xml:space="preserve">
    <value>The payment will be processed in the test mode therefore amount for this transaction will not be charged</value>
  </data>
  <data name="custom.transaction_mode" xml:space="preserve">
    <value>TransactionMode</value>
  </data>
  <data name="custom.merchantid_title" xml:space="preserve">
    <value>Vendor ID</value>
  </data>
  <data name="custom.basic_param_validation" xml:space="preserve">
    <value>Basic parameter not valid</value>
  </data>
  <data name="custom.testmode_notification" xml:space="preserve">
    <value>The payment will be processed in the test mode therefore amount for this transaction will not be charged</value>
  </data>
  <data name="custom.sepa_duedate_desc" xml:space="preserve">
    <value>Enter the number of days after which the payment should be processed</value>
  </data>
  <data name="custom.sepa_duedate_title" xml:space="preserve">
    <value>SEPA payment duration (in days)</value>
  </data>
  <data name="custom.sepa_title" xml:space="preserve">
    <value>Direct Debit SEPA</value>
  </data>
</root>